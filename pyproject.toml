[tool.ruff]

# description of all rules are available on https://docs.astral.sh/ruff/rules/
lint.select = ["D", "E", "F", "W", "C", "S", "I", "TCH", "SLOT", "RUF", "C90", "N", "YTT", "ASYNC", "TRIO"]

# we need to check 'mood' of all docstrings, this needs to be enabled explicitly
lint.extend-select = ["D401"]

lint.ignore = []
lint.pydocstyle.convention = "google"

target-version = "py311"
line-length = 100

[tool.mypy]
disable_error_code = ["union-attr", "return-value", "arg-type", "import-untyped"]
ignore_missing_imports = true

# https://docs.astral.sh/uv/guides/integration/pytorch/
[tool.uv.sources]
torch = [
  { index = "pytorch-cpu" },
]
torchvision = [
  { index = "pytorch-cpu" },
]

[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[project]
name = "aap-rag-content"
version = "0.1.0"
description = "RAG content for AAP chatbot"
authors = []
dependencies = [
    "PyYAML==6.0.2",
    "huggingface-hub>=0.33.1",
    "llama-index>=0.12.44",
    "llama-index-vector-stores-faiss>=0.4.0",
    "llama-index-embeddings-huggingface>=0.5.5",
    "llama-index-readers-file>=0.4.9",
    "requests>=2.32.3",
    "llama-index-vector-stores-postgres>=0.4.2",
    "llama-stack==0.2.12",
    "torch>=2.6.0",
    "torchvision>=0.21.0",
    "faiss-cpu>=1.11.0",
    "sentence-transformers",
    "llama-stack-client==0.2.12",
    "sentencepiece>=0.2.0",
    "tqdm>=4.67.1",
    "numpy>=2.3.0",
    "scikit-learn>=1.7.0",
    "pypdf>=5.6.0",
    "nltk>=3.9.1",
    "chardet>=5.2.0",
    "aiosqlite>=0.21.0",
    "scipy>=1.15.3",
    "transformers>=4.50.3",
    "fastapi>=0.115.12",
    "fire>=0.7.0",
    "httpx>=0.28.1",
    "uvicorn>=0.34.3",
    "opentelemetry-sdk>=1.34.1",
    "opentelemetry-exporter-otlp-proto-http>=1.34.1",
    "aiohttp==3.12.13",
]
requires-python = "==3.12.*"
readme = "README.md"
license = "LICENSE"

[dependency-groups]
dev = [
    "black",
    "mypy",
    "ruff",
    "types-requests",
]
