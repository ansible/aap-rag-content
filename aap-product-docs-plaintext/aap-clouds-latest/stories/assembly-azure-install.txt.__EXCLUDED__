# Installing Red Hat Ansible Automation Platform on Microsoft Azure

# Prerequisites

* A subscription for Microsoft Azure.
* Contributor or Administrator access to that Azure subscription.
* Access to the Azure CLI.

* An account on the Red Hat Red Hat Customer Portal (access.redhat.com).
* A specific subscription entitlement for Red Hat Ansible Automation Platform.

## Azure resource quotas and infrastructure limits

Microsoft imposes resource limits within each Azure region. The CPU limit is the most likely to impact Red Hat Ansible Automation Platform on Microsoft Azure.

Before you install Ansible Automation Platform on Microsoft Azure, ensure that you have capacity to deploy the managed application into your desired region.
Refer to Ansible Automation Platform on Microsoft Azure infrastructure usage for infrastructure requirements.

### Regional vCPU limits

The Azure resources used during the deployment of the managed application temporarily exceed the resource requirements in Ansible Automation Platform on Microsoft Azure infrastructure usage.
The Total Regional vCPUs quota is temporarily consumed when deploying the managed application.

Every Azure region has a separate Total Regional vCPUs quota.
To prevent installation failure, ensure that you have at least 80 DS2_V3 vCPUs available in the Azure region where you want to deploy the managed application.

The following steps describe how to view the resource quotas for your subscription the Azure console:

1. In the Azure console, search for Quotas and open the My Quotas page.
2. Select the region where you wish to deploy the managed application to view your allocation and usage metrics for that region.
Ensure that you have selected a single region. Viewing all regions at once does not show the limitations of a single Azure region.

### Regional StandardCore limits

The StandardCore limit is a compute metric for the resources that are temporarily consumed when deploying the managed application.

It is possible that the Ansible Automation Platform on Microsoft Azure can deploy without hitting the StandardCore limit.
When a deployment fails because the consumed resources hit the StandardCore limit, the error message includes container group quota 'StandardCores' exceeded:


```
code: DeploymentFailed
message:
  At least one resource deployment operation failed. Please list deployment operations for details.
  Please see https://aka.ms/DeployOperations for usage details.
details:
  - code: DeploymentScriptContainerGroupInvalidSettings
    message:
      Resource type 'Microsoft.ContainerInstance/containerGroups'
      container group quota 'StandardCores' exceeded in region 'eastus'.
      Limit: '10', Usage: '10' Requested: '1'.
```


The StandardCore metric is not displayed in the My Quotas page in the Azure console. To request the value of your regional limit, contact Microsoft directly.

If your deployments fail because the consumed resources reach this limit, you must submit a resource increase request for StandardCore to Microsoft.
Only submit a quota increase request if you encounter a deployment failure due to this issue.

Use the following information to respond to questions from Microsoft support:

Will the container groups be run in Linux or Windows?:: Linux
What will the core and memory be in your Container Group instance?:: Red Hat recommends 20 cores, 16 GB
When will you create all the Container Group Instances?:: During managed application deployment of Red Hat Ansible Automation Platform on Microsoft Azure
How frequent will you create/delete the container groups?:: Only during managed application deployment of Red Hat Ansible Automation Platform on Microsoft Azure

## Azure resource providers

Microsoft uses Azure resource providers as a set of REST operations that enable functionality for a specific Azure service in an Azure subscription. For example, the Key Vault service consists of a resource provider named Microsoft.KeyVault. The resource provider defines REST operations for managing vaults, secrets, keys, and certificates.

The resource provider defines the Azure resources you can deploy in your Azure subscription.

### Required Azure Resource Providers

Red Hat Ansible Automation Platform on Microsoft Azure installation requires specific Azure Resource Providers registered in your Azure subscription before you attempt a new installation:


```
"Microsoft.Compute"
"Microsoft.ContainerService/"
"Microsoft.DBforPostgreSQL/"
"Microsoft.KeyVault/"
"Microsoft.ManagedIdentity/"
"Microsoft.Network/"
"Microsoft.OperationalInsights/"
"Microsoft.OperationsManagement/"
"Microsoft.Resources/"
"Microsoft.ResourceGraph"
"Microsoft.Storage/"
"Microsoft.Solutions"
```


### Registering Azure Resource Providers

To  register Azure Resource Providers, follow the instructions in the Register resource provider section of the Azure documentation.

## Network

When you deploy Ansible Automation Platform on Microsoft Azure, you can configure the following networks in the Networking tab of the form:

* The networking address range (CIDR block) for the VNet that your Ansible Automation Platform on Microsoft Azure application uses.
* AKS network CIDR blocks.


[NOTE]
----
Plan your networking configuration before you deploy the Ansible Automation Platform on Microsoft Azure application, because you cannot change it after deployment.
----

### VNet CIDR blocks

You can configure the networking address range (CIDR block) for the VNet that your Ansible Automation Platform on Microsoft Azure application uses.
You set the CIDR block for the application in the Configure virtual networks section of the form when you deploy Ansible Automation Platform on Microsoft Azure.

When you are planning your network configuration, bear the following in mind:

* The managed application requires at least a /24 Vnet that is divided into four subnets. The subnets have minimum address spacing.

* Ensure that the VNet range you configure does not intersect with the default CIDR block for AKS clusters (10.0.0.0/16).
The Azure user interface does not prevent you entering this range, but using the default AKS CIDR block for your VNet causes networking issues.
* To ensure successful network peering and communication between Ansible Automation Platform on Microsoft Azure and your existing networks, your enterprise network ranges must not overlap with the VNet network range.
* If you do not have any existing Azure VNets, the Azure user interface suggests a default CIDR block and range for the VNet.
Do not accept these defaults. Instead, use the network configuration that you have planned.

For information about planning the network address range and completing the networking configuration form on deployment, refer to
Red Hat Ansible Automation Platform on Microsoft Azure VNet Preparation.

### AKS CIDR Blocks

You can configure the AKS network CIDR blocks.
Traffic that originates from the AKS cluster appears to come from the range configured in AKS, not from the VNET.

When you are planning your AKS CIDR block configuration, bear the following in mind:

* Ensure that these network ranges do not overlap with any existing network range in your enterprise network.
* Do not use the following reserved network ranges:


You can configure the AKS network CIDR blocks in the Configure AKS networks area of the networking tab.
Do not accept the default values suggested in the Azure user interface.
Instead, use the CIDR blocks that you have planned.
The settings have the following requirements:



## Creating a service principal

To enable the Ansible Automation Platform application to access and manage Azure resources, you must provide authorization credentials after deployment.
The Microsoft Azure collection supports service principal authentication.

To create a service principal, you must have administrator privileges with tenancy-wide permissions on your Azure tenant.
Your Ansible Automation Platform on Microsoft Azure deployment provisions in the same Subscription ID as the service principal created in this step.

1. Navigate to the Azure portal
2. Click the Cloud Shell icon to open a bash Cloud Shell in your browser.
3. Set the Azure CLI to use the subscription that you intend to use for automating Azure services. Run the following command from the shell:

```
az account set --subscription <your_subscription_id>
```

4. Run the following command using the Azure CLI to create a privileged service principal in Microsoft Entra ID:

```
az ad sp create-for-rbac --name ansible --role Contributor
```


The output displays the appID and tenant keys for the service principal:

```
{
  "appId": "xxxxxxx-xxx-xxxx",
  "displayName": "ansible",
  "name": "xxxxxxx-xxx-xxxx",
  "password": "xxxxxxx-xxx-xxxx",
  "tenant": "xxxxxxx-xxx-xxxx"
}
```

5. Store the service principal details securely, as they are displayed only when you create the secret. You will need them when you deploy Automation controller.

### Maintaining your service principals

Service principal credentials have a limited lifetime that is set in your Microsoft Entra ID configuration.
Track the lifespan of the service principal if you intend to automate against Azure for an extended period of time.
You can create a new one when needed.

To view records of updated or deleted service principles, run the following Azure CLI command:


```
az ad sp list -o table | grep ansible
```


This command does not display the secrets for your service principals. Delete the service principal and create a new one if the secret is lost.

When you create a new service principal to replace an expired or deleted one, you must update the credential that uses the service principal that you are replacing. If the credential is not updated, automations that use that credential will fail.

## Azure Policy

Azure Policy is a tool to help organizations enforce compliance of Azure resources to defined standards.

For information on using Azure Policy with Ansible Automation Platform on Microsoft Azure, see
Azure Policy and Ansible on Azure.

## Entitling your subscription

For information on obtaining a subscription entitlement and attaching it to Ansible Automation Platform, see
Red Hat Ansible Automation Platform on Microsoft Azure Subscription Entitlement Association.

# Deploying Ansible Automation Platform from Azure Marketplace

## Locating Ansible Automation Platform in Azure Marketplace

Before you can start provisioning your Ansible Automation Platform on Microsoft Azure, you must find the offering on the Azure marketplace, enable your subscription, and initiate a deployment.

1. In a browser, navigate to the Azure Marketplace.
2. Click Private Products from the menu on the left of the screen.
3. Search for "Red Hat Ansible Automation Platform".
4. Click the card that is returned in the search. Be sure to select the official offering from Red Hat.
5. Click  btn:[Get it Now].
6. Click btn:[Continue].
7. The Overview tab contains important information about activating your subscription for Ansible Automation Platform.
1. Read the entire Before you begin section.
2. Follow the Click here link to enable your subscription. You cannot use Ansible Automation Platform without a valid subscription.
8. Return to the Overview tab and click btn:[Create] to initiate the deployment process.

## Provisioning Red Hat Ansible Automation Platform on Microsoft Azure

When you initiate the deployment of the Red Hat Ansible Automation Platform managed app from Azure marketplace, a form is displayed in the Create Red Hat Ansible Automation Platform on Microsoft Azure window.

Before you fill in the form, decide whether you want to create a public or private deployment of Ansible Automation Platform on Microsoft Azure:

* Public deployments allow ingress to the Ansible Automation Platform on Microsoft Azure user interfaces over the public internet. No configuration is required to access the application URLs.
* Private deployments are created in an isolated Azure VNet that blocks access from the public internet. To access Ansible Automation Platform on Microsoft Azure user interfaces, you must configure network peering and routing.

You create the network configuration for the Ansible Automation Platform on Microsoft Azure VNet when you initiate the deployment.
Refer to your network configuration plan before deploying the managed application.
For information about planning your network configuration, see
Network.

Complete the form to provision Red Hat Ansible Automation Platform infrastructure and resources into your Azure tenant.

1. Click the Basics tab and enter values for your deployment in the following fields in the form:
* Subscription: Select Ansible on Clouds.
* Resource Group: Create or select a resource group where you want to deploy the managed application.
* Region: The Azure region where the application is deployed.
* Application Name: A unique name for the managed application.
* Administrator Password: Create an adminstrator password for your deployment.

The Administrator Password must contain at least 8 characters, and must include uppercase letters, lowercase letters, and numbers.
* Confirm Administrator Password: Confirm the Administrator Password.
* Access: Choose whether your deployment is public or private.
* Managed Resource Group: A resource group for the managed application infrastructure.

Keep this resource group isolated from other resource groups, including the Resource Group where you will deploy the managed application.
2. Store the information that you entered in the form in a secure place. You must provide the Administrator password to access automation controller and private automation hub.
3. Click btn:[Next]
4. Follow the steps in Red Hat Ansible Automation Platform on Microsoft Azure Networking Preparation to configure your network configuration.
5. Click btn:[Next].
6. Click the Business continuity tab.
7. From the Disaster Recovery list, select an option to enable or disable disaster recovery.
8. From the Tags tab, you can select the resources you want to apply a tag to, otherwise, the default applies.
9. Select the Deployment tab.
10. Note the following requirements in the description:
* You must have a Red Hat account.
* To use Ansible Automation Platform, you must have a valid subscription linked to your Red Hat account.
* You must use the Deployment Driver during deployment.
11. Select the checkboxes to indicate that you understand these requirements.
12. Click btn:[Review + Create].
13. If the information you entered in the form is valid, the window displays Validation Passed.
14. Select I agree to accept the Co-Admin Access Permissions terms and conditions.
15. Click btn:[Create] to begin the provisioning process for the application.

The application begins provisioning.

You can use the deployment engine to view the progress of your deployment a few minutes after the Azure console displays "Your deployment is complete".
See Monitoring deployments on the Ansible Automation Platform Deployment Engine for more information.

It may take 30 minutes or longer for the infrastructure and software to fully provision.

After provisioning is complete, you can access and login to your new Ansible Automation Platform instance and launch automation controller and automation hub.

## Monitoring deployments on the Ansible Automation Platform Deployment Engine

The deployment engine displays information about your Ansible Automation Platform on Microsoft Azure deployment.
You can monitor the progress of the deployment, restart failed deployment steps, and cancel the deployment.

When you begin deploying Ansible Automation Platform on Microsoft Azure, the Azure interface displays the Overview page for the deployment.
The Overview page displays the deployment status.

1. When the status in the Overview page shows "Your deployment is complete", navigate to the deployed managed application.
2. Click Parameters and Outputs in the Settings menu for the deployed managed application.

Approximately 10 minutes into the deployment process, the Outputs section of the Parameters and Outputs page displays a link to the deploymentEngineUrl.
3. Copy the link and paste it in another browser tab to open the login page for the deployment engine.
4. Login to the deployment using the following credentials:
* Username: admin
* Password: Use the Administrator Password that you chose when configuring your deployment.
5. The deployment driver displays a message indicating that your deployment is underway.
Click btn:[Log in with Red Hat account]. The Red Hat login page opens.
6. In the Red Hat login page, enter your credentials if you already have a Red Hat account.

If you do not have a Red Hat account, click btn:[Register for a Red Hat account] to create one.

After logging in with your Red Hat account, the Ansible Automation Platform Deployment Engine page opens.

## Ansible Automation Platform Deployment Engine interface

The Ansible Automation Platform Deployment Engine displays a list of the steps in the deployment process.
A progress bar shows how far along the deployment is.
Icons indicate the steps that have been completed, the steps that are in progress, and steps that have failed.

To view extended information about a step that failed, click on the failed icon for that step.

To restart a failed step, click btn:[Restart Step].

## Canceling Red Hat Ansible Automation Platform on Microsoft Azure deployments

You can gracefully cancel a Red Hat Ansible Automation Platform on Microsoft Azure deployment.

1. Login to the deployment engine to display the progress of the deployment steps in the Ansible Automation Platform Deployment Engine page.
Refer to
Monitoring deployments on the Ansible Automation Platform Deployment Engine
for information on accessing and logging into the Ansible Automation Platform Deployment Engine page.
2. To cancel the deployment, click btn:[Cancel Deployment] and confirm.

This action cancels all the remaining steps in the deployment, including the currently running step. It also cancels pending steps in the deployment.

The status for the steps that have not been executed updates to Canceled.
To view the deployment processes on Azure, navigate to the Overview page for the managed resource group in which you deployed Ansible Automation Platform and select Deployments.

[IMPORTANT]
----
Canceling the deployment does not delete the managed application from your Azure subscription.
To avoid incurring costs for the managed application and other resources that are still running, you must delete them.
----
3. To delete Azure resources, navigate to the resource group for your deployment in the Azure portal. Select the resources you want to delete and click btn:[Delete].
For more information about deleting resources, refer to Manage Azure resources by using the Azure portal in the Microsoft Azure documentation.