# Execution plane

As part of the Ansible Automation Platform Service on AWS subscription, you receive 10 Red Hat Enterprise Linux (RHEL) entitlements for running the execution plane. Additional RHEL or OpenShift licenses can be purchased separately.

# Shape

Your execution plane&#8217;s size and shape depend on the type of automation and the locations connected to the mesh. Use the following guidelines for your automation mesh implementation:

* Ansible Automation Platform minimum requirements:
* Hop Nodes: Required only when not using the push model. They typically require minimal resources. The shape of a hop node depends on the number of connected execution nodes. A virtual machine (VM) with 2 vCPUs and 2 GB RAM can route traffic for 2-4 execution nodes.
* For help with configuring your automation mesh see
Automation mesh for managed cloud or operator environments.
* For automation in fewer locations (such as specific geographies or clouds), create a mesh with fewer VMs that can be scaled vertically. Most clouds and hypervisors allow shape changes with minimal downtime.
* For CPU or RAM-intensive automation, use larger machine shapes.
* For automation spanning multiple locations, create a mesh with nodes that connect to those locations.
* Consider using different CPU architectures, like ARM, and reserved instances to reduce execution plane costs.
* To configure redundancy in the automation mesh, set up at least two mesh nodes of the same shape in different availability zones within the same region, connecting each machine to both hosted hop nodes.
* Use OpenShift if auto-scaling the execution plane is necessary.

# Networking

## Automation mesh

Ansible Automation Platform Service on AWS provides default “mesh-ingress” hop nodes.
These hosted hop nodes allow execution nodes to poll for automation work through egress from a customer’s private network, eliminating the need to open inbound firewall ports.
Hosted hop nodes use port 443 for inbound traffic.

The following is an example of an execution node in a private address space with egress-only internet access connected to Ansible Automation Platform Service on AWS through this model.



You can also configure the automation mesh with outbound connectivity from the control plane to your execution plane, allowing you to specify the ports used by the automation mesh.

You can use the Automation mesh for managed cloud or operator environments documentation for instructions.

## Connectivity

The execution plane can communicate with the control plane under the following conditions:

* Polling (mesh-ingress): Execution nodes must route stateful egress traffic to the Ansible Automation Platform deployment domain over port 443.
* Push: A configurable firewall port must be open in the customer’s remote networks to allow Ansible Automation Platform to push information to execution nodes.

You can configure automation mesh nodes behind firewalls, proxy servers, and similar services.
These services route or proxy traffic originating from Ansible Automation Platform without altering headers, payload, or other information that would affect functionality of the automation mesh.

# Monitoring

You can configure monitoring and hardening tools of your choice on the execution plane.
You are responsible for their operation, functionality, and maintenance, ensuring they do not interfere with the execution plane&#8217;s operation.

Any additional workloads on the execution plane requires extra resources from the virtual machines or OpenShift clusters where the tools are deployed.
Make sure to size resources accordingly to accommodate these additional requirements.

# DNS

Execution nodes use the DNS configuration of the host machine for DNS queries. Configure DNS using standard RHEL network practices to ensure proper lookups during automation execution.

# Networking with overlapping CIDR blocks

Automation mesh connects the control plane to multiple networks that share the same Classless Inter-Domain Routing (CIDR) block (that is, the same class A address space repeated across different clouds or data centers).
Execution nodes regard their deployment network as the local network. You must have at least one execution node instance paired with an instance group to target automation in each network.

# Updates and maintenance

Automation mesh execution nodes are designed to minimize the need for patching the execution plane when the control plane is updated.
However, future updates to the technology will require customer involvement to update the components in each execution plane node.
When patches are needed, customers should follow the process for updating an automation mesh node.
For help with updating your receptor see the Updating Receptors section of the Automation mesh for managed cloud or operator environments.