# Creating connection secrets

You must create an authorization secret to connect to Red Hat Ansible Automation Platform, and a model secret to connect to IBM watsonx Code Assistant. If you need to trust a custom Certificate Authority, you must create a bundle secret.
* You have installed the Ansible Automation Platform operator on the Red Hat OpenShift Container Platform.
* You have created an OAuth application in the automation controller.
* You have obtained an API key and a model ID from IBM watsonx Code Assistant.

For information about obtaining an API key and model ID from IBM watsonx Code Assistant, see the IBM watsonx Code Assistant documentation. For information about installing IBM watsonx Code Assistant for Red Hat Ansible Lightspeed on Cloud Pak for Data, see the watsonx Code Assistant for Red Hat Ansible Lightspeed on Cloud Pak for Data documentation.

# Creating authorization and model secrets

Use this procedure to create secrets to connect to both Red Hat Ansible Automation Platform and IBM watsonx Code Assistant.

1. Go to the Red Hat OpenShift Container Platform.
2. Select menu:Workloads[Secrets].
3. Click menu:Create[Key/value secret].
4. From the Projects list, select the namespace that you created when you installed the Red Hat Ansible Automation Platform operator.
5. Create an authorization secret to connect to the Red Hat Ansible Automation Platform:
1. Click menu:Create[Key/value secret].
2. In Secret name, enter a unique name for the secret. For example, auth-aiconnect.
3. Add the following keys and their associated values individually:


[IMPORTANT]
----
Ensure that you do not accidentally add any whitespace characters (extra line, space, and so on) to the value fields. If there are any extra or erroneous characters in the secret, the connection to Red Hat Ansible Automation Platform fails.
----
4. Click Create.

The following image is an example of an authorization secret:
![{Example of an authorization secret]
6. Similarly, create a model secret to connect to an IBM watsonx Code Assistant model:
1. Click menu:Create[Key/value secret].
2. In Secret name, enter a unique name for the secret. For example, model-aiconnect.
3. Add the following keys and their associated values individually:


[IMPORTANT]
----
Ensure that you do not accidentally add any whitespace characters (extra line, space, and so on) to the value fields. If there are any extra or erroneous characters in the secret, the connection to IBM watsonx Code Assistant fails.
----
4. Click Create.

After you create the authorization and model secrets, you must select the secrets when you  create and deploy a Red Hat Ansible Lightspeed instance.

# Creating a bundle secret to trust a custom Certificate Authority

If you encounter a scenario where you need to trust a custom Certificate Authority, you can customize a few variables for the Red Hat Ansible Lightspeed instance. Trusting a custom Certificate Authority enables the Red Hat Ansible Lightspeed instance to access network services configured with SSL certificates issued locally, such as cloning a project from an internal Git server via HTTPS.

If you encounter the following error when syncing projects, it indicates that you need to customize the variables.

fatal: unable to access 'https://private.repo./mine/ansible-rulebook.git': SSL certificate problem: unable to get local issuer certificate

Use one of the following methods to create a custom bundle secret using the CLI:

* Using a Certificate Authority secret

Create a bundle_cacert_secret using  the following command:

# kubectl create secret generic <resourcename>-custom-certs \
    --from-file=bundle-ca.crt=<PATH/TO/YOUR/CA/PEM/FILE> 1
Where:

&lt;1&gt;: Path of the self-signed certificate. Modify the file path to point to where your self-signed certificates are stored. The Red Hat Ansible Lightspeed instance looks for the data field bundle-ca.crt in the specified bundle_cacert_secret secret.

The following is an example of a bundle CA certificate:

spec:
  ...
  bundle_cacert_secret: <resourcename>-custom-certs
* Using the kustomization.yaml configuration file

Use the following command:

secretGenerator:
  - name: <resourcename>-custom-certs
    files:
      - bundle-ca.crt=<path+filename>
    options:
      disableNameSuffixHash: true

After you create the bundle secret, you must select the secret when you  create and deploy a Red Hat Ansible Lightspeed instance.

* Troubleshooting Red Hat Ansible Lightspeed on-premise deployment errors