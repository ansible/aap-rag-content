# Setting up Red Hat Ansible Lightspeed on-premise deployment

As an Red Hat Ansible Automation Platform administrator, you can set up a Red Hat Ansible Lightspeed on-premise deployment and connect it to an IBM watsonx Code Assistant instance. After the on-premise deployment is successful, you can start using the Ansible Lightspeed service with the Ansible Visual Studio (VS) Code extension.
The following capability is not yet supported on Red Hat Ansible Lightspeed on-premise deployments:
* Viewing telemetry data on the Admin dashboard

[NOTE]
----
Red Hat Ansible Lightspeed on-premise deployments are supported on Red Hat Ansible Automation Platform version 2.4 and later.
----

# Overview

This section provides information about the system requirements, prerequisites, and the process for setting up a Red Hat Ansible Lightspeed on-premise deployment.

## System requirements

Your system must meet the following minimum system requirements to install and run the Red Hat Ansible Lightspeed on-premise deployment.



To see the rest of the Red Hat Ansible Automation Platform system requirements, see the topic System requirements in the Red Hat Ansible Automation Platform Planning Guide.


[NOTE]
----
You must also have installed IBM watsonx Code Assistant for Red Hat Ansible Lightspeed on Cloud Pak for Data. The installation includes a base model that you can use to set up your Red Hat Ansible Lightspeed on-premise deployment. For installation information, see the IBM watsonx Code Assistant for Red Hat Ansible Lightspeed on Cloud Pak for Data documentation.
----

## Prerequisites

* You have installed Red Hat Ansible Automation Platform on your Red Hat OpenShift Container Platform environment.
* You have administrator privileges for Red Hat Ansible Automation Platform.
* You have installed IBM watsonx Code Assistant for Red Hat Ansible Lightspeed on Cloud Pak for Data.
* Your system meets the minimum system requirements to set up Red Hat Ansible Lightspeed on-premise deployment.
* You have obtained an API key and a model ID from IBM watsonx Code Assistant.

For information about obtaining an API key and model ID from IBM watsonx Code Assistant, see the IBM watsonx Code Assistant documentation. For information about installing IBM watsonx Code Assistant for Red Hat Ansible Lightspeed on Cloud Pak for Data, see the watsonx Code Assistant for Red Hat Ansible Lightspeed on Cloud Pak for Data documentation.
* You have an existing external PostgreSQL database configured for the Red Hat Ansible Automation Platform, or have a database created for you when configuring the Red Hat Ansible Lightspeed on-premise deployment.

## Process for configuring a Red Hat Ansible Lightspeed on-premise deployment

Perform the following tasks to install and configure a Red Hat Ansible Lightspeed on-premise deployment:

1. Install the Red Hat Ansible Automation Platform operator
2. Create an OAuth application
3. Create connections secrets for Red Hat Ansible Automation Platform and IBM watsonx Code Assistant both
4. Create and deploy a Red Hat Ansible Lightspeed instance
5. Update the Redirect URI to connect to your Red Hat Ansible Lightspeed on-premise deployment
6. Install and configure Ansible Visual Studio Code extension to connect to Red Hat Ansible Lightspeed on-premise deployment
7. Optional: If you want to connect to a different IBM watsonx Code Assistant, update the connection secrets on an existing Red Hat Ansible Automation Platform operator
8. Optional: Monitor your Red Hat Ansible Lightspeed on-premise deployment

# Installing the Red Hat Ansible Automation Platform operator

Use this procedure to install the Ansible Automation Platform operator on the Red Hat OpenShift Container Platform.

* You have installed and configured automation controller.

1. Log in to the Red Hat OpenShift Container Platform as an administrator.
2. Create a namespace:
1. Go to menu:Administration[Namespaces].
2. Click Create Namespace.
3. Enter a unique name for the namespace.
4. Click Create.
3. Install the operator:
1. Go to menu:Operators[OperatorHub].
2. Select the namespace where you want to install the Red Hat Ansible Automation Platform operator.
3. Search for the Ansible Automation Platform operator.
4. From the search results, select the Ansible Automation Platform (provided by Red Hat) tile.
5. Select an Update Channel. You can select either stable-2.x or stable-2.x-cluster-scoped as the channel.
6. Select the destination namespace if you selected “stable-2.x” as the update channel.
7. Select Install. It takes a few minutes for the operator to be installed.
4. Click View Operator to see the details of your newly installed Red Hat Ansible Automation Platform operator.

# Creating an OAuth application

Use this procedure to create an OAuth application for your Red Hat Ansible Lightspeed on-premise deployment.

* You have an operational Ansible automation controller instance.

1. Log in to the automation controller as an administrator.
2. Under Administration, click menu:Applications[Add].
3. Enter the following information:
1. Name: Specify a unique name for your application.
2. Organization: Select a preferred organization.
3. Authorization grant type: Select Authorization code.
4. Redirect URIs: Enter a temporary URL for now, for example, https://temp/.

The exact Red Hat Ansible Lightspeed application URL is generated after the on-premise deployment is completed. After the deployment is completed, you must change the Redirect URI to point to the generated Red Hat Ansible Lightspeed application URL. For more information, see Updating the Redirect URIs.
5. From the Client type list, select Confidential.
4. Click Save.

A pop-up window is displayed along with the generated application client ID and client secret.
5. Copy and save both the generated client ID and client secret for future use.

[IMPORTANT]
----
This is the only time the pop-up window is displayed. Therefore, ensure that you copy both the client ID and client secret, as you need these tokens to create connections secrets for Red Hat Ansible Automation Platform and IBM watsonx Code Assistant both.
----

The following image is an example of the generated client ID and client secret:
![{Example of a generated client ID and client secret]

* Troubleshooting Red Hat Ansible Lightspeed on-premise deployment errors

# Creating connection secrets

You must create an authorization secret to connect to Red Hat Ansible Automation Platform, and a model secret to connect to IBM watsonx Code Assistant. If you need to trust a custom Certificate Authority, you must create a bundle secret.

* You have installed the Ansible Automation Platform operator on the Red Hat OpenShift Container Platform.
* You have created an OAuth application in the automation controller.
* You have obtained an API key and a model ID from IBM watsonx Code Assistant.

For information about obtaining an API key and model ID from IBM watsonx Code Assistant, see the IBM watsonx Code Assistant documentation. For information about installing IBM watsonx Code Assistant for Red Hat Ansible Lightspeed on Cloud Pak for Data, see the watsonx Code Assistant for Red Hat Ansible Lightspeed on Cloud Pak for Data documentation.

## Creating authorization and model secrets

Use this procedure to create secrets to connect to both Red Hat Ansible Automation Platform and IBM watsonx Code Assistant.

1. Go to the Red Hat OpenShift Container Platform.
2. Select menu:Workloads[Secrets].
3. Click menu:Create[Key/value secret].
4. From the Projects list, select the namespace that you created when you installed the Red Hat Ansible Automation Platform operator.
5. Create an authorization secret to connect to the Red Hat Ansible Automation Platform:
1. Click menu:Create[Key/value secret].
2. In Secret name, enter a unique name for the secret. For example, auth-aiconnect.
3. Add the following keys and their associated values individually:


[IMPORTANT]
----
Ensure that you do not accidentally add any whitespace characters (extra line, space, and so on) to the value fields. If there are any extra or erroneous characters in the secret, the connection to Red Hat Ansible Automation Platform fails.
----
4. Click Create.

The following image is an example of an authorization secret:
![{Example of an authorization secret]
6. Similarly, create a model secret to connect to an IBM watsonx Code Assistant model:
1. Click menu:Create[Key/value secret].
2. In Secret name, enter a unique name for the secret. For example, model-aiconnect.
3. Add the following keys and their associated values individually:


[IMPORTANT]
----
Ensure that you do not accidentally add any whitespace characters (extra line, space, and so on) to the value fields. If there are any extra or erroneous characters in the secret, the connection to IBM watsonx Code Assistant fails.
----
4. Click Create.

After you create the authorization and model secrets, you must select the secrets when you  create and deploy a Red Hat Ansible Lightspeed instance.

## Creating a bundle secret to trust a custom Certificate Authority

If you encounter a scenario where you need to trust a custom Certificate Authority, you can customize a few variables for the Red Hat Ansible Lightspeed instance. Trusting a custom Certificate Authority enables the Red Hat Ansible Lightspeed instance to access network services configured with SSL certificates issued locally, such as cloning a project from an internal Git server via HTTPS.

If you encounter the following error when syncing projects, it indicates that you need to customize the variables.

fatal: unable to access 'https://private.repo./mine/ansible-rulebook.git': SSL certificate problem: unable to get local issuer certificate

Use one of the following methods to create a custom bundle secret using the CLI:

* Using a Certificate Authority secret

Create a bundle_cacert_secret using  the following command:

# kubectl create secret generic <resourcename>-custom-certs \
    --from-file=bundle-ca.crt=<PATH/TO/YOUR/CA/PEM/FILE> 1
Where:

&lt;1&gt;: Path of the self-signed certificate. Modify the file path to point to where your self-signed certificates are stored. The Red Hat Ansible Lightspeed instance looks for the data field bundle-ca.crt in the specified bundle_cacert_secret secret.

The following is an example of a bundle CA certificate:

spec:
  ...
  bundle_cacert_secret: <resourcename>-custom-certs
* Using the kustomization.yaml configuration file

Use the following command:

secretGenerator:
  - name: <resourcename>-custom-certs
    files:
      - bundle-ca.crt=<path+filename>
    options:
      disableNameSuffixHash: true

After you create the bundle secret, you must select the secret when you  create and deploy a Red Hat Ansible Lightspeed instance.

* Troubleshooting Red Hat Ansible Lightspeed on-premise deployment errors

# Creating and deploying a Red Hat Ansible Lightspeed instance

Use this procedure to create and deploy a Red Hat Ansible Lightspeed instance to your namespace.

* You have created connection secrets for both Red Hat Ansible Automation Platform and IBM watsonx Code Assistant.

1. Go to Red Hat OpenShift Container Platform.
2. Select menu:Operators[Installed Operators].
3. From the Projects list, select the namespace where you want to install the Red Hat Ansible Lightspeed instance and where you created the connection secrets.
4. Locate and select the Ansible Automation Platform (provided by Red Hat) operator that you installed earlier.
5. Select menu:All instances[Create new].
6. From the Create new list, select the Ansible Lightspeed modal.
7. Ensure that you have selected Form view as the configuration mode.
8. Provide the following information:
1. Name: Enter a unique name for your Red Hat Ansible Lightspeed instance.
2. Secret where the authentication information can be found: Select the authentication secret that you created to connect to the Red Hat Ansible Automation Platform.
3. Secret where the model configuration can be found: Select the model secret that you created to connect to IBM watsonx Code Assistant.
9. Optional: If you created a bundle secret to trust a custom Certificate Authority, select the bundle_cacert_secret from menu:Advanced[Bundle CA Certificate Secret] list.
10. Click Create.

The Red Hat Ansible Lightspeed instance takes a few minutes to deploy to your namespace. After the installation status is displayed as Successful, the Ansible Lightspeed portal URL is available under menu:Networking[Routes] in Red Hat OpenShift Container Platform.

* Troubleshooting Red Hat Ansible Lightspeed on-premise deployment errors

# Updating the Redirect URIs

When Ansible users log in or log out of Ansible Lightspeed service, the Red Hat Ansible Automation Platform redirects the user&#8217;s browser to a specified URL. You must configure the redirect URLs so that users can log in and log out of the application successfully.

* You have created and deployed a Red Hat Ansible Lightspeed instance to your namespace.

1. Get the URL of the Ansible Lightspeed instance:
1. Go to Red Hat OpenShift Container Platform.
2. Select menu:Networking[Routes].
3. Locate the Red Hat Ansible Lightspeed instance that you created.
4. Copy the Location URL of the Red Hat Ansible Lightspeed instance.
2. Update the login redirect URI:
1. In the automation controller, go to menu:Administration[Applications].
2. Select the Lightspeed Oauth application that you created.
3. In the Redirect URIs field of the Oauth application, enter the URL in the following format:

\https://<lightspeed_route>/complete/aap/

An example of the URL is https://lightspeed-on-prem-web-service.com/complete/aap/.

[IMPORTANT]
----
The Redirect URL must include the following information:
* The prefix https://
* The <lightspeed_route> URL, which is the URL of the Red Hat Ansible Lightspeed instance that you copied earlier
* The suffix /complete/aap/ that includes a backslash sign (/) at the end
----
4. Click Save.
3. Update the logout redirect URI based on your setup:

Procedure when both the Red Hat Ansible Lightspeed instance and automation controller are installed using Ansible Automation Platform operator:
1. Log in to the cluster on which the Ansible Automation Platform instance is running.
2. Identify the AutomationController custom resource.
3. Select [YAML view].
4. Add the following entry to the YAML file:

```yaml
  spec:
  ...
  extra_settings:
    - setting: LOGOUT_ALLOWED_HOSTS
      value: "'<lightspeed_route-HostName>'"
  ```

[IMPORTANT]
----
Ensure the following while specifying the value: parameter:
* Specify the hostname without the network protocol, such as https://.

For example, the correct hostname would be my-aiconnect-instance.somewhere.com, and not https://my-aiconnect-instance.somewhere.com.
* Use the single and double quotes exactly as specified in the codeblock.

If you change the single quotes to double quotes and vice versa, you will encounter errors when logging out.
* Use a comma to specify multiple instances of Red Hat Ansible Lightspeed deployment.

If you are running multiple instances of Red Hat Ansible Lightspeed application with a single Red Hat Ansible Automation Platform deployment, add a comma (,) and then add the other hostname values. For example, you can add multiple hostnames, such as "'my-lightspeed-instance1.somewhere.com','my-lightspeed-instance2.somewhere.com'"
----
5. Apply the revised YAML. This task restarts the automation controller pods.

Procedure when the Ansible Automation Platform operator is run on a virtual machine:

1. Log in to the virtual machine with the Ansible Automation Platform controller.
2. In the /etc/tower/conf.d/custom.py file, add the following parameter:
LOGOUT_ALLOWED_HOSTS = "<lightspeed_route-HostName>"

[IMPORTANT]
----
* If the /etc/tower/conf.d/custom.py file does not exist, create it.
* Specify the hostname without the network protocol, such as https://.

For example, the correct hostname would be my-aiconnect-instance.somewhere.com, and not https://my-aiconnect-instance.somewhere.com.
* Use the single and double quotes in pairs; do not mix single quotes with double quotes.
----
3. Restart the automation controller by executing the following command:
$ automation-controller-service restart

Procedure when the platform gateway is run on a virtual machine:

1. Log in to the virtual machine with the platform gateway.
2. Add the following parameter in either the gateway/settings.py file or in the ansible-automation-platform/gateway/settings.py file:
LOGOUT_ALLOWED_HOSTS = "<lightspeed_route-HostName>"

[IMPORTANT]
----
* Specify the hostname without the network protocol, such as https://.

For example, the correct hostname would be my-aiconnect-instance.somewhere.com, and not https://my-aiconnect-instance.somewhere.com.
* Use double quotes exactly as specified in the codeblock.
----

* Troubleshooting Red Hat Ansible Lightspeed on-premise deployment errors

# Configuring Ansible VS Code extension for Red Hat Ansible Lightspeed on-premise deployment

To access the on-premise deployment of Red Hat Ansible Lightspeed, all Ansible users within your organization must install the Ansible Visual Studio (VS) Code extension in their VS Code editor, and configure the extension to connect to the on-premise deployment.

* You have installed VS Code version 1.70.1 or later.

1. Open the VS Code application.
2. From the Activity bar, click the Extensions icon.
3. From the Installed Extensions list, select Ansible.
4. From the Ansible extension page, click the Settings icon () and select Extension Settings.
5. Select Ansible Lightspeed settings and specify the following information:
* In the URL for Ansible Lightspeed field, enter the Route URL of the Red Hat Ansible Lightspeed on-premise deployment. Ansible users must have Ansible Automation Platform controller credentials.
* Optional: If you want to use a custom model instead of the default model, in the Model ID Override field, enter the custom model ID. Your settings are automatically saved in VS Code.

After configuring Ansible VS Code extension to connect to Red Hat Ansible Lightspeed on-premise deployment, you must log in to Ansible Lightspeed through the Ansible VS Code extension.

[NOTE]
----
If your organization recently subscribed to the Red Hat Ansible Automation Platform, it might take a few hours for Red Hat Ansible Lightspeed to detect the new subscription. In VS Code, use the Refresh button in the Ansible extension from the Activity bar to check again.
----

* Troubleshooting Red Hat Ansible Lightspeed on-premise deployment errors

# Updating connection secrets on an existing Red Hat Ansible Automation Platform operator

After you have set up the Red Hat Ansible Lightspeed on-premise deployment successfully, you can modify the deployment if you want to connect to another IBM watsonx Code Assistant model. For example, you connected to the default IBM watsonx Code Assistant model but now want to connect to a custom model instead. To connect to another IBM watsonx Code Assistant model, you must create new connection secrets, and then update the connection secrets and parameters on an existing Red Hat Ansible Automation Platform operator.

* You have set up a Red Hat Ansible Lightspeed on-premise deployment.
* You have obtained an API key and a model ID of the IBM watsonx Code Assistant model you want to connect to.
* You have created new authorization and model connection secrets for the IBM watsonx Code Assistant model that you want to connect to. For information about creating authorization and model connection secrets, see Creating connection secrets.

1. Go to the Red Hat OpenShift Container Platform.
2. Select menu:Operators[Installed Operators].
3. From the Projects list, select the namespace where you installed the Red Hat Ansible Lightspeed instance.
4. Locate and select the Ansible Automation Platform (provided by Red Hat) operator that you installed earlier.
5. Select the Ansible Lightspeed tab.
6. Find and select the instance you want to update.
7. Click menu:Actions[Edit AnsibleLightspeed]. The editor switches to a text or YAML view.
8. Scroll the text to find the spec: section.

)
9. Find the entry for the secret you have changed and saved under a new name.
10. Change the name of the secrets to the new secrets.
11. Click Save.

The new AnsibleLightspeed Pods are created. After the new pods are running successfully, the old AnsibleLightspeed Pods are terminated.

* Troubleshooting Red Hat Ansible Lightspeed on-premise deployment errors

# Monitoring your Red Hat Ansible Lightspeed on-premise deployment

After the Red Hat Ansible Lightspeed on-premise deployment is successful, use the following procedure to monitor the metrics on an API endpoint /metrics.

1. Create a system auditor user:
1. Create a user with a system auditor role in the the Red Hat Ansible Automation Platform. Refer to the procedure in the topic Creating a user in the Automation Controller User Guide.
2. Verify that you can log in to the Ansible Lightspeed portal for on-premise deployment (\https://<lightspeed_route>/) as the newly-created system auditor user, and then log out.
2. Create a token for the system auditor user:
1. Log in to the Ansible Lightspeed portal for on-premise deployment (\https://<lightspeed_route>/admin) as an administrator by using the following credentials:
* Username: admin
* Password: The secret that is named as <lightspeed-custom-resource-name>-admin-password in the Red Hat OpenShift Container Platform cluster namespace where Red Hat Ansible Lightspeed is deployed.
2. On the Django administration window, select Users from the Users area. A list of users is displayed.
3. Verify that the user with the system auditor role is listed in the Users list.
4. From the Django Oauth toolkit area, select menu:Access tokens[Add].
5. Provide the following information and click Save:
* User: Use the magnifying glass icon to search and select the user with the system auditor role.
* Token: Specify a token for the user. Copy this token for later use.
* Id token: Select the token ID.
* Application: Select Ansible Lightspeed for VS Code.
* Expires: Select the date and time when you want the token to expire.
* Scope: Specify the scope as read write.

An access token is created for the user with a system auditor role.
6. Log out from the Ansible Lightspeed portal for on-premise deployment.
3. Monitor your Red Hat Ansible Lightspeed on-premise deployment, by using the authorization token of the user with the system auditor role, to access the metrics endpoint \https://<lightspeed_route>/metrics.