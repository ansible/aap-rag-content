# Using Ansible plug-ins for Red Hat Developer Hub

Thank you for your interest in Red Hat Ansible Automation Platform. Ansible Automation Platform is a commercial offering that helps teams manage complex multi-tier deployments by adding control, knowledge, and delegation to Ansible-powered environments.
This guide describes how to use Ansible plug-ins for Red Hat Developer Hub.
This document has been updated to include information for the latest release of Ansible Automation Platform.

# Providing feedback on Red Hat documentation

If you have a suggestion to improve this documentation, or find an error, you can contact technical support at https://access.redhat.com to open a request.

# Using the Ansible plug-ins

You can use Ansible plug-ins for Red Hat Developer Hub (RHDH) to learn about Ansible, create automation projects, and access opinionated workflows and tools to develop and test your automation code.
From the Red Hat Developer Hub UI, you can navigate to your Ansible Automation Platform instance, where you can configure and run automation jobs.

This document describes how to use the Ansible plug-ins for Red Hat Developer Hub.
It presents a worked example of developing a playbook project for automating updates to your firewall configuration on RHEL systems.

## Optional requirement

The Ansible plug-ins for Red Hat Developer Hub link to Learning Paths on the Red&#160;Hat developer portal,
developers.redhat.com/learn.

To access the Learning Paths, you must have a Red&#160;Hat account and you must be able to log in to developers.redhat.com.

## Dashboard navigation

When you log in to Red Hat Developer Hub (RHDH), the main RHDH menu and dashboard are displayed.

To view the dashboard for Ansible plug-ins for Red Hat Developer Hub, click Ansible in the Red Hat Developer Hub navigation panel.

![Ansible plug-in dashboard]

The plug-in dashboard illustrates the steps you need to take from learning about Ansible to deploying automation jobs from Ansible Automation Platform:

* Overview displays the main dashboard page.
* Learn provides links to resources curated by Red Hat that introduce you to Ansible and provide step-by-step examples to get you started.
For more information, see
Learning about Ansible.
* Discover existing collections links to private automation hub, if configured in the plug-ins, or to automation hub hosted on the Red Hat Hybrid Cloud Console.
Automation hub stores existing collections and execution environments that you can use in your projects.
For more information, see
Discovering existing collections.
* Create creates new projects in your configured Source Control Management platforms such as GitHub.
For more information, see
Creating a project.
* Develop links you to OpenShift Dev Spaces, if configured in the Ansible plug-ins installation.
OpenShift Dev Spaces provides on-demand, web-based Integrated Development Environments (IDEs), where you can develop automation content.
For more information, see
Developing projects.
* Operate connects you to Ansible Automation Platform, where you can create and run automation jobs that use the projects you have developed.
For more information, see
Setting up a controller project to run your playbook project.

## Learning about Ansible

To learn more about getting started with automation, click Learn from the Overview page of the plug-in dashboard.
The Learn page provides the following options for learning:

* Learning Paths lists a curated selection of learning tools hosted on developers.redhat.com that guide you through the foundations of working with Ansible, the Ansible VS Code extension, and using YAML.

You can select other Ansible learning paths from the Useful links section.
* Labs are self-led labs that are designed to give you hands-on experience in writing Ansible content and using Ansible development tools.

## Discovering existing collections

From the Overview page in the Ansible plug-ins dashboard on Red Hat Developer Hub, click Discover Existing Collections.

The links in this pane provide access to the source of reusable automation content collections that you configured during plug-in installation.

If you configured private automation hub when installing the plug-in, you can click Go to Automation Hub to view the collections and execution environments that your enterprise has curated.

If you did not configure a private automation hub URL when installing the plug-in, the Discover existing collection pane provides a link to Red Hat automation hub on console.redhat.com.
You can explore certified and validated Ansible content collections on this site.

## Creating a project

* Ensure you have the correct access (RBAC) to view the templates in Red Hat Developer Hub.
Ask your administrator to assign access to you if necessary.

1. Log in to your Red Hat Developer Hub UI.
2. Click the Ansible A icon in the Red Hat Developer Hub navigation panel.
3. Navigate to the Overview page.
4. Click Create.
5. Click Create Ansible Git Project. The Available Templates page opens.
6. Click Create Ansible Playbook project.
7. In the Create Ansible Playbook Project page, enter information for your new project in the form.

You can see sample values for this form in the Example project.


[NOTE]
----
Collection namespaces must follow Python module naming conventions.
Collections must have short, all lowercase names.
You can use underscores in the collection name if it improves readability.
For more information, see the Ansible Collection naming conventions documentation.
----
8. Click Review.

## Viewing your projects

To view the projects that you have created in the plug-in, navigate to the Overview page for the Ansible plug-in and click My Items.

## Developing projects

### Developing projects on Dev Spaces

OpenShift Dev Spaces
is not included with your Ansible Automation Platform subscription or the Ansible plug-ins for Red Hat Developer Hub.

The plug-ins provide context-aware links to edit your project in Dev Spaces.

The Dev Spaces instance provides a default configuration that installs the Ansible VS Code extension and provides the Ansible command line tools.
You can activate Ansible Lightspeed in the Ansible VS Code extension. For more information, refer to the
Red Hat Ansible Lightspeed with IBM watsonx Code Assistant User Guide.

### Executing automation tasks in Dev Spaces

The default configuration for Dev Spaces provides access to the Ansible command line tools.

To execute an automation task in Dev Spaces from the VSCode user interface,
right-click a playbook name in the list of files and select Run Ansible Playbook via ansible-navigator run or Run playbook via ansible-playbook.

![Run a playbook from VS Code]

## Setting up a controller project to run your playbook project

1. The Ansible plug-ins provide a link to Ansible Automation Platform.
2. Log in to your Red Hat Developer Hub UI.
3. Click the Ansible A icon in the Red Hat Developer Hub navigation panel.
4. Click Operate to display a link to your Ansible Automation Platform instance.

If automation controller was not included in your plug-in installation, a link to the product feature page is displayed.
5. Click Go to Ansible Automation Platform to open your platform instance in a new browser tab.

Alternatively, if your platform instance was not configured during the Ansible plug-in installation, navigate to your automation controller instance in a browser and log in.
6. Log in to automation controller.
7. Create a project in Ansible Automation Platform for the GitHub repository where you stored your playbook project.
Refer to the
Projects
chapter of TitleControllerUserGuide.
8. Create a job template that uses a playbook from the project that you created.
Refer to the
Workflow job templates
chapter of TitleControllerUserGuide.

# Providing feedback in the Ansible plug-ins

The Ansible plug-ins provide a feedback form where you can suggest new features and content, as well as general feedback.

1. Click the Ansible A icon in the Red Hat Developer Hub navigation panel.
2. Click the Feedback icon to display the feedback form.
![Ansible plug-in feedback form]
3. Enter the feedback you want to provide.
4. Tick the I understand that feedback is shared with Red Hat checkbox.
5. Click Submit.


[NOTE]
----
To ensure that Red Hat receives your feedback, exclude your Red Hat Developer Hub URL in any browser ad blockers or privacy tools.
----

# Example: Automate Red Hat Enterprise Linux firewall configuration

This example demonstrates how the Ansible plug-ins can help Ansible users of all skill levels create quality Ansible content.

As an infrastructure engineer new to Ansible, you have been tasked to create a playbook to configure a Red Hat Enterprise Linux (RHEL) host firewall.

The following procedures show you how to use the Ansible plug-ins and Dev Spaces to develop a playbook.

## Learning more about playbooks

The first step is to learn more about Ansible playbooks using the available learning paths.

1. Click the Ansible A icon in the Red Hat Developer Hub navigation panel.
2. Click Learn and select the Getting Started with Ansible Playbooks learning path.
This redirects you to the Red Hat Developer website.
3. If you are prompted to log in, create a Red Hat Developer account, or enter your details.
4. Complete the learning path.

## Discovering existing Ansible content for RHEL system roles

Red Hat recommends that you use trusted automation content that has been tested and approved by Red Hat or your organization.

Automation hub is a central repository for discovering, downloading, and managing trusted content collections from Red Hat and its partners.
Private automation hub provides an on-premise solution for managing content collections.

1. Click on the Ansible A icon in the Red Hat Developer Hub navigation panel.
2. Click Discover existing collections.
3. Click Go to Automation Hub.
* If private automation hub has been configured in the Ansible plug-ins, you are redirected to your PrivateHubName instance.
* If private automation hub has not been configured in the Ansible plug-ins installation configuration,
you will be redirected to the Red Hat Hybrid Console (RHCC) automation hub.

In this example, you are redirected to the RHCC automation hub.
4. If you are prompted to log in, provide your Red Hat Customer Portal credentials.
5. Filter the collections with the rhel firewall keywords.

The search returns the rhel_system_roles collection.

The RHEL System Roles collection contains certified Ansible content that you can reuse to configure your firewall.

## Create a new playbook project to configure a firewall

Use the Ansible plug-ins to create a new Ansible Playbook project.

1. Click the Ansible A icon in the Red Hat Developer Hub navigation panel.
2. From the Create dropdown menu on the landing page, select Create Ansible Git Project.
3. Click Choose in the Create Ansible Playbook Project software template.
4. Fill in the following information in the Create Ansible Playbook Project page:



1. Click Review.
2. Click Create to provision your new playbook project.
3. Click Open in catalog to view your project.

## Creating a new playbook to automate the firewall configuration

Create a new playbook and use the RHEL System Role collection to automate your Red Hat Enterprise Linux firewall configuration.

1. In your Dev Spaces instance, click .
2. Enter firewall.yml for the filename and click OK to save it in the root directory.
3. Add the following lines to your firewall.yml file:

```
---
- name: Open HTTPS and SSH on firewall
  hosts: rhel
  become: true
  tasks:
    - name: Use rhel system roles to allow https and ssh traffic
      vars:
        firewall:
          - service: https
            state: enabled
            permanent: true
            immediate: true
            zone: public
          - service: ssh
            state: enabled
            permanent: true
            immediate: true
            zone: public
      ansible.builtin.include_role:
        name: redhat.rhel_system_roles.firewall
```



[NOTE]
----
You can use Ansible Lightspeed with IBM watsonx Code Assistant from the Ansible VS Code extension to help you generate playbooks.
For more information, refer to the
Ansible Lightspeed with IBM watsonx Code Assistant User Guide.
----

## Editing your firewall playbook project

The Ansible plug-ins integrate OpenShift Dev Spaces to edit your Ansible projects.
OpenShift Dev Spaces provides on-demand, web-based Integrated Development Environments (IDEs).

Ansible Git projects provisioned using the Ansible plug-ins include best practice configurations for OpenShift Dev Spaces.
These configurations include installing the Ansible VS Code extension and providing access from the IDE terminal to Ansible development tools,
such as Ansible Navigator and Ansible Lint.


[NOTE]
----
OpenShift Dev Spaces is optional and it is not required to run the Ansible plug-ins.
It is a separate Red Hat product and it is not included in the Ansible Automation Platform or Red Hat Developer Hub subscription.
----

This example assumes that OpenShift Dev Spaces has been configured in the Ansible plug-ins installation.

* In the catalog item view of your playbook project, click Open Ansible project in OpenShift Dev Spaces.

A VS Code instance of OpenShift Dev Spaces opens in a new browser tab.
It automatically loads your new Ansible Playbook Git project.