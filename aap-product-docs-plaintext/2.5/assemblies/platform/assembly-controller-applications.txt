# Applications

Create and configure token-based authentication for external applications such as ServiceNow and Jenkins.
With token-based authentication, external applications can easily integrate with Ansible Automation Platform.
With OAuth 2 you can use tokens to share data with an application without disclosing login information.
You can configure these tokens as read-only.
You can create an application that is representative of the external application you are integrating with, then use it to create tokens for the application to use on behalf of its users.
Associating these tokens with an application resource enables you to manage all tokens issued for a particular application.
By separating the issue of tokens under OAuth Applications, you can revoke all tokens based on the application without having to revoke all tokens in the system.

# Getting started with OAuth Applications

You can access the OAuth Applications page from the navigation panel by selecting menu:Access Management[OAuth Applications]. From there you can view, create, sort and search for applications currently managed by Ansible Automation Platform and automation controller.

If no applications exist, you can create one by clicking btn:[Create OAuth application].

## Access Rules for applications and tokens

Access rules for applications are as follows:

* System administrators can view and manipulate all applications in the system.
* Organization administrators can view and manipulate all applications belonging to organization members.
* Other users can only view, update, and delete their own applications, but cannot create any new applications.
* Tokens, on the other hand, are resources used to authenticate incoming requests and mask the permissions of the underlying user.

Access rules for tokens are as follows:

* Users can create a token if they are able to view the related application and can also create a personal token for themselves.
* System administrators are able to view and manipulate every token in the system.
* Organization administrators are able to view and manipulate all tokens belonging to organization members.
* System Auditors can view all tokens and applications.
* Other normal users are only able to view and manipulate their own tokens.


[NOTE]
----
Users can only view the token or refresh the token value at the time of creation.
----

## Application functions

Several OAuth 2 utilities are available for authorization, token refresh, and revoke.
You can specify the following grant types when creating an application:

Password:: This grant type is ideal for users who have native access to the web application and must be used when the client is the resource owner.
Authorization code:: This grant type should be used when access tokens must be issued directly to an external application or service.


[NOTE]
----
You can only use the authorization code type to acquire an access token when using an application. When integrating an external web application with Ansible Automation Platform, that web application might need to create OAuth2 tokens on behalf of users in that other web application. Creating an application in the platform with the authorization code grant type is the preferred way to do this because:
* This allows an external application to obtain a token from Ansible Automation Platform for a user, using their credentials.
* Compartmentalized tokens issued for a particular application enables those tokens to be easily managed. For example, revoking all tokens associated with that application without having to revoke all tokens in the system.
----

### Requesting an access token after expiration

The Gateway access token expiration defaults to 600 seconds (10 minutes).

The best way to set up application integrations using the Authorization code grant type is to allowlist the origins for those cross-site requests. More generally, you must allowlist the service or application you are integrating with the platform, for which you want to provide access tokens.

To do this, have your administrator add this allowlist to their local Ansible Automation Platform settings file:


```
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOWED_ORIGIN_REGEXES = [
    r"http://django-oauth-toolkit.herokuapp.com*",
    r"http://www.example.com*"
]
```


Where http://django-oauth-toolkit.herokuapp.com and http://www.example.com are applications requiring tokens with which to access the platform.

# Creating a new application

When integrating an external web application with Ansible Automation Platform, the web application might need to create OAuth2 tokens on behalf of users of the web application.

Creating an application with the Authorization Code grant type is the preferred way to do this for the following reasons:

* External applications can obtain a token for users, using their credentials.
* Compartmentalized tokens issued for a particular application, enables those tokens to be easily managed.
For example, revoking all tokens associated with that application.

1. From the navigation panel, select menu:Access Management[OAuth Applications].
2. Click btn:[Create OAuth application].
The Create Application page opens.
3. Enter the following details:
Name:: (required) Enter a name for the application you want to create.
Description:: (optional) Include a short description for your application.
Organization:: (required) Select an organization with which this application is associated.
Authorization grant type:: (required) Select one of the grant types to use for the user to get tokens for this application.
For more information, see Application functions for more information about grant types.
Client Type:: (required) Select the level of security of the client device.
Redirect URIS:: Provide a list of allowed URIs, separated by spaces.
You need this if you specified the grant type to be Authorization code.
4. Click btn:[Create OAuth application], or click btn:[Cancel] to abandon your changes.

The Client ID and Client Secret display in a window. This will be the only time the client secret will be shown.

[NOTE]
----
The Client Secret is only created when the Client type is set to Confidential.
----
5. Click the copy icon and save the client ID and client secret to integrate an external application with Ansible Automation Platform.