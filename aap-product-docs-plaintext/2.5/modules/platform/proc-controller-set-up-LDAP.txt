# Configuring LDAP authentication

As a platform administrator, you can configure LDAP as the source for account authentication information for Ansible Automation Platform users.


[NOTE]
----
If the LDAP server you want to connect to has a certificate that is self-signed or signed by a corporate internal certificate authority (CA), the CA certificate must be added to the systemâ€™s trusted CAs. Otherwise, connection to the LDAP server will result in an error that the certificate issuer is not recognized.
----

When LDAP is configured, an account is created for any user who logs in with an LDAP username and password and they can be automatically placed into organizations as either regular users or organization administrators.

Users created through an LDAP login should not change their username, first name, last name, or set a local password for themselves. Any changes made to this information is overwritten the next time the user logs in to the platform.

1. From the navigation panel, select menu:Access Management[Authentication Methods].
2. Click btn:[Create authentication].
3. Select LDAP from the Authentication type list and click btn:[Next].
4. Enter a Name for this LDAP configuration. The configuration name is required, must be unique across all authenticators, and must not be longer than 512 characters.
5. In the LDAP Server URI field, enter or modify the list of LDAP servers to which you want to connect. This field supports multiple addresses.
6. In the LDAP Bind DN text field, enter the Distinguished Name (DN) to specify the user that the Ansible Automation Platform uses to connect to the LDAP server. For example:

```
CN=josie,CN=users,DC=website,DC=com
```

7. In the LDAP Bind Password text field, enter the password to use for the binding user.
8. Select a group type from the LDAP Group Type list. The LDAP Group Type list includes the following groups:
* PosixGroupType
* GroupOfNamesType
* GroupOfUniqueNamesType
* ActiveDirectoryGroupType
* OrganizationalRoleGroupType
* MemberDNGroupType
* NISGroupType
* NestedGroupOfNamesType
* NestedGroupOfUniqueNamesType
* NestedActiveDirectoryGroupType
* NestedOrganizationalRoleGroupType
* NestedMemberDNGroupType
* PosixUIDGroupType

[NOTE]
----
The group types that are supported by Ansible Automation Platform use the underlying django-auth-ldap library. To specify the parameters for the selected group type, see Step 13 of this procedure.
----
9. To use LDAP User DN Template as an alternative to user search, enter the name of the template. This approach is more efficient for user lookups than searching if it is usable in your organizational environment. If this setting has a value it will be used instead of the LDAP User Search setting.
10. LDAP Start TLS is disabled by default. To enable TLS when the LDAP connection is not using SSL, set the switch to On.
11. Optional: Enter any Additional Authenticator Fields that this authenticator can take. These fields are not validated and are passed directly back to the authenticator.

[NOTE]
----
Values defined in this field override the dedicated fields provided in the UI.
----
12. Enter any LDAP Connection Options to set for the LDAP connection.
13. Depending on the selected LDAP Group Type, different parameters are available in the LDAP Group Type Parameters field to account for this. LDAP_GROUP_TYPE_PARAMS is a dictionary, which is converted to kwargs and passed to the LDAP Group Type class selected. There are two common parameters used by group types: name_attr and member_attr. Where name_attr defaults to cn and member_attr defaults to member:

```
{"name_attr": "cn", "member_attr": "member"}
```


To determine the parameters that a specific LDAP Group Type requires, refer to the django_auth_ldap documentation on the classes init parameters.
14. In the LDAP Group Search field, specify which groups should be searched and how to search them.
15. In the LDAP User Attribute Map field, enter user attributes to map LDAP fields to your Ansible Automation Platform users, for example, email or first_name.
16. In the LDAP User Search field, enter where to search for users during authentication.
17. To automatically create organizations, users, and teams upon successful login, select Create objects.
18. To enable this authentication method upon creation, select Enabled.
19. To remove a user for any groups they were previously added to when they authenticate from this source, select Remove users.
20. Click btn:[Next].

To control which users are allowed into the Ansible Automation Platform server, and placed into Ansible Automation Platform organizations or teams based on their attributes (like username and email address) or to what groups they belong, continue to Mapping.