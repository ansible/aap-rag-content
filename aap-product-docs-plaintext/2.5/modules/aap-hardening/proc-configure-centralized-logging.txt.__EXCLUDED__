# Configure centralized logging

A critical capability of logging is the ability for the automation controller to detect and take action to mitigate a failure, such as reaching storage capacity, which by default shuts down automation controller.
This guide recommends that the application server be part of a high availability system.
When this is the case, automation controller will take the following steps to mitigate failure:

* If the failure was caused by the lack of log record storage capacity, the application must continue generating log records if possible (automatically restarting the log service if necessary), overwriting the oldest log records in a first-in-first-out manner.
* If log records are sent to a centralized collection server and communication with this server is lost or the server fails, the application must queue log records locally until communication is restored or until the log records are retrieved manually.
Upon restoration of the connection to the centralized collection server, action must be taken to synchronize the local log data with the collection server.

To verify the rsyslog configuration for each automation controller host, complete the following steps for each automation controller:

The administrator must check the rsyslog configuration for each automation controller host to verify the log rollover against a organizationally defined log capture size.
To do this, use the following steps, and correct using the configuration steps as required:

1. Check the LOG_AGGREGATOR_MAX_DISK_USAGE_GB field in the automation controller configuration. On the host, execute:

```
awx-manage print_settings LOG_AGGREGATOR_MAX_DISK_USAGE_GB
```


If this field is not set to the organizationally defined log capture size, then follow the configuration steps.
2. Check LOG_AGGREGATOR_MAX_DISK_USAGE_PATH field in the automation controller configuration for the log file location to /var/lib/awx.  On the host, execute:

```
awx-manage print_settings LOG_AGGREGATOR_MAX_DISK_USAGE_PATH
```


If this field is not set to /var/lib/awx, then follow these configuration steps:
1. Open a web browser and navigate to https://<automation controller server>/api/v2/settings/logging/, where <automation controller server> is the fully-qualified hostname of your automation controller. If the btn:[Log In] option is displayed, click it, log in as an automation controller adminstrator account, and continue.
2. In the Content section, modify the following values, then click btn:[PUT]:
* LOG_AGGREGATOR_MAX_DISK_USAGE_GB = <new log buffer in GB>
* LOG_AGGREGATOR_MAX_DISK_USAGE_PATH = /var/lib/awx

Note that this change will need to be made on each automation controller in a load-balanced scenario.

All user session data must be logged to support troubleshooting, debugging and forensic analysis for visibility and analytics. Without this data from the controllerâ€™s web server, important auditing and analysis for event investigations will be lost. To verify that the system is configured to ensure that user session data is logged, use the following steps:

For each automation controller host, from the navigation panel, select menu:Settings[System].

1. Click btn:[Edit].
2. Set the following:
* Enable Activity Stream = On
* Enable Activity Stream for Inventory Sync = On
* Organization Admins Can Manage Users and Teams = Off
* All Users Visible to Organization Admins = On
3. Click btn:[Save]

To set up logging to any of the aggregator types, read the documentation on supported log aggregators and configure your log aggregator using the following steps:

1. From the navigation panel, select menu:Settings[Logging].
2. On the Logging settings page, click btn:[Edit].
3. You can configure the following options:
* Logging Aggregator: Enter the hostname or IP address that you want to send logs to.
* Logging Aggregator Port: Specify the port for the aggregator if it requires one.

[NOTE]
----
When the connection type is HTTPS, you can enter the hostname as a URL with a port number, after which, you are not required to enter the port again.
However, TCP and UDP connections are determined by the hostname and port number combination, rather than URL.
Therefore, in the case of a TCP or UDP connection, supply the port in the specified field.
If a URL is entered in the Logging Aggregator field instead, its hostname portion is extracted as the hostname.
----
* Logging Aggregator Type: Click to select the aggregator service from the list:
* Logging Aggregator Username: Enter the username of the logging aggregator if required.
* Logging Aggregator Password/Token: Enter the password of the logging aggregator if required.
* Loggers to Send Data to the Log Aggregator Form: All four types of data are pre-populated by default.
Click the tooltip  icon next to the field for additional information on each data type.
Delete the data types you do not want.
* Cluster wide unique identifier: Use this to uniquely identify instances.
* Logging Aggregator Protocol: Click to select a connection type (protocol) to communicate with the log aggregator.
Subsequent options vary depending on the selected protocol.
* TCP Connection Timeout: Specify the connection timeout in seconds.
This option is only applicable to HTTPS and TCP log aggregator protocols.
* Logging Aggregator Level Threshold: Select the level of severity you want the log handler to report.
* Maximum number of messages that can be stored in the log action queue:Defines how large the rsyslog action queue can grow in number of messages stored.
This can have an impact on memory use.
When the queue reaches 75% of this number, the queue starts writing to disk (queue.highWatermark in rsyslog).
When it reaches 90%, NOTICE, INFO, and DEBUG messages start to be discarded (queue.discardMark with queue.discardSeverity=5).
* Maximum disk persistence for rsyslogd action queuing (in GB): The amount of data to store (in gigabytes) if an rsyslog action takes time to process an incoming message (defaults to 1).
Equivalent to the rsyslogd queue.maxdiskspace setting on the action (e.g. omhttp).
It stores files in the directory specified by LOG_AGGREGATOR_MAX_DISK_USAGE_PATH.
* File system location for rsyslogd disk persistence: Location to persist logs that should be retried after an outage of the external log aggregator (defaults to /var/lib/awx).
Equivalent to the rsyslogd queue.spoolDirectory setting.
Set the following options:
* Log System Tracking Facts Individually: Click the tooltip  icon for additional information, such as whether or not you want to turn it on, or leave it off by default.
4. Review your entries for your chosen logging aggregation.
* Enable External Logging: Select this checkbox if you want to send logs to an external log aggregator.
* Enable/disable HTTPS certificate verification: Certificate verification is enabled by default for the HTTPS log protocol.
Select this checkbox if you want the log handler to verify the HTTPS certificate sent by the external log aggregator before establishing a connection.
* Enable rsyslogd debugging: Select this checkbox to enable high verbosity debugging for rsyslogd.
Useful for debugging connection issues for external log aggregation.
5. Click btn:[Save] or btn:[Cancel] to abandon the changes.

An automation controller account is automatically created for any user who logs in with an LDAP username and password. These users can automatically be placed into organizations as regular users or organization administrators.
This means that logging must be turned on when LDAP integration is in use.
You can enable logging messages for the SAML adapter the same way you can enable logging for LDAP.

The following steps enable the LDAP logging:

To enable logging for LDAP, you must set the level to DEBUG in the Settings configuration window.

1. From the navigation panel, select menu:Settings[Logging].
2. On the Logging settings page, click btn:[Edit].
3. Set the Logging Aggregator Level Threshold field to Debug.
4. Click btn:[Save] to save your changes.